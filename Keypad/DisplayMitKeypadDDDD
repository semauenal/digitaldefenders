#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>

// I2C address of the LCD display
#define LCD_ADDR 0x3F

// Keypad matrix and pins
const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
byte rowPins[ROWS] = {9,8,7,6};
byte colPins[COLS] = {5,4,3,2};

// Initialize the LCD display
LiquidCrystal_I2C lcd(LCD_ADDR, 16, 2);

// Initialize the Keypad
Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

// Password to be entered by the user
char password[] = "1234";

void setup() {
  // Initialize the LCD display
  lcd.init();
  lcd.backlight();

  // Print the welcome message
  lcd.setCursor(0, 0);
  lcd.print("Enter Password:");
}

void checkPassword() {
  delay(500);
  lcd.clear();
  if (strcmp(password, "1234") == 0) {
    lcd.print("Door opens!");
    delay(1000);
    while(keypad.getKey() != '#') { // wait for '#' key to be pressed
      delay(10);
    }
  } else {
    lcd.print("Wrong Password!");
    delay(1500);
  }
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Enter Password:");
}

void loop() {
  // Read the keypad input
  char key = keypad.getKey();
  
  // If a key is pressed, add it to the password
  if (key != NO_KEY) {
    static int passwordIndex = 0;
    lcd.setCursor(passwordIndex, 1);
    lcd.print(key);
    password[passwordIndex] = key;
    passwordIndex++;
    
    // If the password is complete, check it
    if (passwordIndex == sizeof(password) - 1) {
      passwordIndex = 0;
      checkPassword();
    }
  }
}